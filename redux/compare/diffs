diff -r -w aa/Acompose.c bb/Acompose.c
105c105
<           s1 = MAXSTATE ;
---
>           s1 = MAXSHORT ;
126c126
<           s2 = MAXSTATE ;
---
>           s2 = MAXSHORT ;
diff -r -w aa/Acrea.c bb/Acrea.c
258c258
<   return A ;
---
>   return ( A ) ;
diff -r -w aa/AGMsseq.c bb/AGMsseq.c
30c30,32
<   int aa, bb, cc, nq, len, from, to, label, hi_next, try1 ;
---
> 
>   int aa, bb, cc, nq, len, from, to, label, hi_next, try ;
> 
67,68c69
<       ) {
<     if ( A -> A_t [ i ] . A_b / 2 == 1 ) {
---
>       ) if ( A -> A_t [ i ] . A_b / 2 == 1 ) {
72d72
<   }
185,186c185
<         ++ i ) {
<     if ( set [ i ] != UNMARK ) {
---
>         ++ i ) if ( set [ i ] != UNMARK ) {
192,193c191
<             p ++ ) {
<         if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>             p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
196d193
<       }
205d201
<   }
232c228
<     try1 = to_coeff [ vec [ 0 ] ] [ j ] ;
---
>     try = to_coeff [ vec [ 0 ] ] [ j ] ;
234,236c230
<     if ( try1 == MAXSHORT ) {
<       goto idone ;
<     }
---
>     if ( try == MAXSHORT ) goto idone ;
240,241c234
<           i ++ ) {
<       if ( to_coeff [ vec [ i ] ] [ j ] != try1 ) {
---
>           i ++ ) if ( to_coeff [ vec [ i ] ] [ j ] != try ) {
244d236
<     }
251c243,245
<     label = 2 * try1 + 1 ;
---
> 
>     label = 2 * try + 1 ;
> 
349,350c343
<                   p ++ ) {
<               if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>                   p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
353d345
<             }
369,370c361
<                 gap /= 2 ) {
<             for ( i = gap ;
---
>                 gap /= 2 ) for ( i = gap ;
372,373c363
<                   i ++ ) {
<               for ( j = i - gap ;
---
>                                    i ++ ) for ( j = i - gap ;
380,381d369
<             }
<           }
386,387c374
<                 ++ i ) {
<             if ( set [ i ] != UNMARK ) {
---
>                 ++ i ) if ( set [ i ] != UNMARK ) {
393,394c380
<                     p ++ ) {
<                 if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>                     p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
397d382
<               }
407d391
<         }
423c407
<           try1 = to_coeff [ vec [ 0 ] ] [ j ] ;
---
>           try = to_coeff [ vec [ 0 ] ] [ j ] ;
425,427c409
<           if ( try1 == MAXSHORT ) {
<             goto done ;
<           }
---
>           if ( try == MAXSHORT ) goto done ;
431,432c413
<                 i ++ ) {
<             if ( to_coeff [ vec [ i ] ] [ j ] != try1 ) {
---
>                 i ++ ) if ( to_coeff [ vec [ i ] ] [ j ] != try ) {
435d415
<           }
439c419,421
<           label = 2 * try1 + 1 ;
---
> 
>           label = 2 * try + 1 ;
> 
479,480c461
<                   k = back [ k ] ) {
<               if ( sig [ k ] == i ) {
---
>                   k = back [ k ] ) if ( sig [ k ] == i ) {
483d463
<             }
diff -r -w aa/Ajoin.c bb/Ajoin.c
72c72
<           s1 = MAXSTATE ;
---
>           s1 = MAXSHORT ;
93c93
<           s2 = MAXSTATE ;
---
>           s2 = MAXSHORT ;
diff -r -w aa/Alamcm.c bb/Alamcm.c
58,59c58
<         ) {
<       if ( A -> A_p [ i + 1 ] == ( p = A -> A_p [ i ] ) + 1 && p -> A_b == 0 ) {
---
>         ) if ( A -> A_p [ i + 1 ] == ( p = A -> A_p [ i ] ) + 1 && p -> A_b == 0 ) {
63d61
<     }
71,72c69
<             p ++ ) {
<         if ( c_rena [ j = p -> A_c ] < FAIL ) {
---
>             p ++ ) if ( c_rena [ j = p -> A_c ] < FAIL ) {
84d80
<     }
88,89c84
<         ) {
<       if ( c_rena [ i ] < FAIL ) {
---
>         ) if ( c_rena [ i ] < FAIL ) {
92d86
<     }
96,97c90
<         ) {
<       if ( c_rena [ i ] >= FAIL ) {
---
>         ) if ( c_rena [ i ] >= FAIL ) {
100d92
<     }
diff -r -w aa/Alameq.c bb/Alameq.c
14c14
<   l_low [ state ] = ( dfn = l_cnt ++ ) ;
---
>   l_low [ state ] = dfn = l_cnt ++ ;
37,38c37
<   if ( l_low [ state ] == dfn ) {
<     for ( next = ( - 1 ) ;
---
>   if ( l_low [ state ] == dfn ) for ( next = ( - 1 ) ;
45d43
<   }
94,96c92
<       ) {
<     if ( l_stk [ i ] == UNMARK ) {
<       if ( A_la_DFS ( i ) != i ) {
---
>       ) if ( l_stk [ i ] == UNMARK ) if ( A_la_DFS ( i ) != i ) {
99,100d94
<     }
<   }
diff -r -w aa/Alenmin.c bb/Alenmin.c
51,52c51
<         p ++ ) {
<     if ( dis [ p -> A_a ] >= dis [ p -> A_c ] ) {
---
>         p ++ ) if ( dis [ p -> A_a ] >= dis [ p -> A_c ] ) {
55d53
<   }
diff -r -w aa/ALMsseq.c bb/ALMsseq.c
14c14,16
<   int aa, bb, cc, nq, len, from, to, label, hi_next, try1 ;
---
> 
>   int aa, bb, cc, nq, len, from, to, label, hi_next, try ;
> 
50,51c52
<       ) {
<     if ( A -> A_t [ i ] . A_b / 2 == 1 ) {
---
>       ) if ( A -> A_t [ i ] . A_b / 2 == 1 ) {
55d55
<   }
162,163c162
<         ++ i ) {
<     if ( set [ i ] != UNMARK ) {
---
>         ++ i ) if ( set [ i ] != UNMARK ) {
169,170c168
<             p ++ ) {
<         if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>             p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
173d170
<       }
182d178
<   }
209c205
<     try1 = to_coeff [ vec [ 0 ] ] [ j ] ;
---
>     try = to_coeff [ vec [ 0 ] ] [ j ] ;
211,213c207
<     if ( try1 == MAXSHORT ) {
<       goto idone ;
<     }
---
>     if ( try == MAXSHORT ) goto idone ;
217,218c211
<           i ++ ) {
<       if ( to_coeff [ vec [ i ] ] [ j ] != try1 ) {
---
>           i ++ ) if ( to_coeff [ vec [ i ] ] [ j ] != try ) {
221d213
<     }
228c220,222
<     label = 2 * try1 + 1 ;
---
> 
>     label = 2 * try + 1 ;
> 
326,327c320
<                   p ++ ) {
<               if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>                   p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
330d322
<             }
346,347c338
<                 gap /= 2 ) {
<             for ( i = gap ;
---
>                 gap /= 2 ) for ( i = gap ;
349,350c340
<                   i ++ ) {
<               for ( j = i - gap ;
---
>                                    i ++ ) for ( j = i - gap ;
357,358d346
<             }
<           }
363,364c351
<                 ++ i ) {
<             if ( set [ i ] != UNMARK ) {
---
>                 ++ i ) if ( set [ i ] != UNMARK ) {
370,371c357
<                     p ++ ) {
<                 if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>                     p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
374d359
<               }
384d368
<         }
400c384
<           try1 = to_coeff [ vec [ 0 ] ] [ j ] ;
---
>           try = to_coeff [ vec [ 0 ] ] [ j ] ;
402,404c386
<           if ( try1 == MAXSHORT ) {
<             goto done ;
<           }
---
>           if ( try == MAXSHORT ) goto done ;
408,409c390
<                 i ++ ) {
<             if ( to_coeff [ vec [ i ] ] [ j ] != try1 ) {
---
>                 i ++ ) if ( to_coeff [ vec [ i ] ] [ j ] != try ) {
412d392
<           }
416c396,398
<           label = 2 * try1 + 1 ;
---
> 
>           label = 2 * try + 1 ;
> 
456,457c438
<                   k = back [ k ] ) {
<               if ( sig [ k ] == i ) {
---
>                   k = back [ k ] ) if ( sig [ k ] == i ) {
460d440
<             }
569c549
<                   veccpy ( to_coeff [ p -> A_c ] + tt, ( st_ptr [ p -> A_c ] + tt - ( len - st_len [ p -> A_c ] ) ) ) ;
---
>                   veccpy ( to_coeff [ p -> A_c ] + tt, st_ptr [ p -> A_c ] + tt - ( len - st_len [ p -> A_c ] ) ) ;
580c560
<                       fprintf ( fpout, "%s ", T_name ( TT, ( to_coeff [ p -> A_c ] [ k ] ) ) ) ;
---
>                       fprintf ( fpout, "%s ", T_name ( TT, to_coeff [ p -> A_c ] [ k ] ) ) ;
diff -r -w aa/Amin.c bb/Amin.c
76c76
<   in_B [ START ] = ( in_B [ 2 ] = 0 ) ;
---
>   in_B [ START ] = in_B [ 2 ] = 0 ;
94c94
<   B_H [ 1 ] = ( B_N [ FINAL ] = ( B_L [ FINAL ] = FINAL ) ) ;
---
>   B_H [ 1 ] = B_N [ FINAL ] = B_L [ FINAL ] = FINAL ;
118c118
<       p = ( lo = A -> A_p [ s ] ) ;
---
>       p = lo = A -> A_p [ s ] ;
187c187
<               B_L [ ( B_H [ j ] = ( B_N [ B_L [ s ] ] = B_N [ s ] ) ) ] = B_L [ s ] ;
---
>               B_L [ B_H [ j ] = B_N [ B_L [ s ] ] = B_N [ s ] ] = B_L [ s ] ;
200c200
<             B_L [ ( B_N [ s ] = B_H [ nB ] ) ] = s ;
---
>             B_L [ B_N [ s ] = B_H [ nB ] ] = s ;
227,228c227
<           } else {
<             for ( s = int_H [ j ] ;
---
>           } else for ( s = int_H [ j ] ;
234d232
<           }
diff -r -w aa/Aopen.c bb/Aopen.c
1d0
< extern int S_flag ;
2a2
> #include <assert.h>
10,25c10,13
< 
<   if ( A == NULL ) {
<     Error ( "A_add: No OBJECT" ) ;
<   }
< 
<   if ( A -> A_mode != OPEN ) {
<     Error ( "A_add: Object not OPEN" ) ;
<   }
< 
<   if ( a < 0 || b < 0 || c < 0 ) {
<     Error ( "A_add: Numbers cannot be negative" ) ;
<   }
< 
<   if ( a >= MAXSHORT || b >= MAXSHORT || c >= MAXSHORT ) {
<     Error ( "A_add: Numbers are too big" ) ;
<   }
---
>   assert ( A != NULL ) ;
>   assert ( A -> A_mode == OPEN ) ;
>   assert ( a >= 0 && b >= 0 && c >= 0 ) ;
>   assert ( a < MAXSHORT && b < MAXSHORT && c < MAXSHORT ) ;
53,56c41
<   if ( A == NULL ) {
<     Error ( "A_open: No OBJECT" ) ;
<   }
< 
---
>   assert ( A != NULL ) ;
70,73c55
< 
<   if ( A == NULL ) {
<     Error ( "A_close: No OBJECT" ) ;
<   }
---
>   assert ( A != NULL ) ;
96a79
>   assert ( N > 0 ) ;
112a96
>     assert ( p -> A_c < N ) ;
125a110,111
>   assert ( p == t2 ) ;
> 
129c115
<     q = -- ptr [ i = p -> A_c ] ;
---
>     q = -- ptr [ p -> A_c ] ;
130a117
>     assert ( p -> A_b < N ) ;
132c119
<     q -> A_c = i ;
---
>     q -> A_c = p -> A_c ;
144a132,133
>   assert ( p == t1 ) ;
> 
148c137,138
<     q = -- ptr [ i = p -> A_b ] ;
---
>     q = -- ptr [ p -> A_b ] ;
>     assert ( p -> A_a < N ) ;
150c140
<     q -> A_b = i ;
---
>     q -> A_b = p -> A_b ;
163a154,155
>   assert ( p == t2 ) ;
> 
167,168c159,160
<     q = -- ptr [ i = p -> A_a ] ;
<     q -> A_a = i ;
---
>     q = -- ptr [ p -> A_a ] ;
>     q -> A_a = p -> A_a ;
178c170
<   ( t2z + 1 ) -> A_a = MAXSHORT ;
---
>   ( t2z + 1 ) -> A_c = MAXSHORT ;
226,230c218
< 
<   if ( A == NULL ) {
<     Error ( "A_rename: No OBJECT" ) ;
<   }
< 
---
>   assert ( A != NULL ) ;
315,319c303
< 
<   if ( A == NULL ) {
<     Error ( "A_rename: No OBJECT" ) ;
<   }
< 
---
>   assert ( A != NULL ) ;
diff -r -w aa/Aretape.c bb/Aretape.c
30,31c30
<         i ++ ) {
<     if ( A2 -> A_t [ i ] . A_a != i + 1 || A2 -> A_t [ i ] . A_c != i + 2 ) {
---
>         i ++ ) if ( A2 -> A_t [ i ] . A_a != i + 1 || A2 -> A_t [ i ] . A_c != i + 2 ) {
34d32
<   }
diff -r -w aa/Asseq.c bb/Asseq.c
13c13,15
<   int aa, bb, cc, nq, len, from, to, label, hi_next, try1 ;
---
> 
>   int aa, bb, cc, nq, len, from, to, label, hi_next, try ;
> 
58,59c60
<       ) {
<     if ( A -> A_t [ i ] . A_b / 2 == 1 ) {
---
>       ) if ( A -> A_t [ i ] . A_b / 2 == 1 ) {
63d63
<   }
164,165c164
<         ++ i ) {
<     if ( set [ i ] != UNMARK ) {
---
>         ++ i ) if ( set [ i ] != UNMARK ) {
171,172c170
<             p ++ ) {
<         if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>             p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
175d172
<       }
184d180
<   }
211c207
<     try1 = to_coeff [ vec [ 0 ] ] [ j ] ;
---
>     try = to_coeff [ vec [ 0 ] ] [ j ] ;
213,215c209
<     if ( try1 == MAXSHORT ) {
<       goto idone ;
<     }
---
>     if ( try == MAXSHORT ) goto idone ;
219,220c213
<           i ++ ) {
<       if ( to_coeff [ vec [ i ] ] [ j ] != try1 ) {
---
>           i ++ ) if ( to_coeff [ vec [ i ] ] [ j ] != try ) {
223d215
<     }
230c222,224
<     label = 2 * try1 + 1 ;
---
> 
>     label = 2 * try + 1 ;
> 
328,329c322
<                   p ++ ) {
<               if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>                   p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
332d324
<             }
348,349c340
<                 gap /= 2 ) {
<             for ( i = gap ;
---
>                 gap /= 2 ) for ( i = gap ;
351,352c342
<                   i ++ ) {
<               for ( j = i - gap ;
---
>                                    i ++ ) for ( j = i - gap ;
359,360d348
<             }
<           }
365,366c353
<                 ++ i ) {
<             if ( set [ i ] != UNMARK ) {
---
>                 ++ i ) if ( set [ i ] != UNMARK ) {
372,373c359
<                     p ++ ) {
<                 if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
---
>                     p ++ ) if ( p -> A_b == 1 || p -> A_b % 2 == 0 ) {
376d361
<               }
386d370
<         }
402c386
<           try1 = to_coeff [ vec [ 0 ] ] [ j ] ;
---
>           try = to_coeff [ vec [ 0 ] ] [ j ] ;
404,406c388
<           if ( try1 == MAXSHORT ) {
<             goto done ;
<           }
---
>           if ( try == MAXSHORT ) goto done ;
410,411c392
<                 i ++ ) {
<             if ( to_coeff [ vec [ i ] ] [ j ] != try1 ) {
---
>                 i ++ ) if ( to_coeff [ vec [ i ] ] [ j ] != try ) {
414d394
<           }
418c398,400
<           label = 2 * try1 + 1 ;
---
> 
>           label = 2 * try + 1 ;
> 
458,459c440
<                   k = back [ k ] ) {
<               if ( sig [ k ] == i ) {
---
>                   k = back [ k ] ) if ( sig [ k ] == i ) {
462d442
<             }
565c545
<                   veccpy ( to_coeff [ p -> A_c ] + tt, ( st_ptr [ p -> A_c ] + tt - ( len - st_len [ p -> A_c ] ) ) ) ;
---
>                   veccpy ( to_coeff [ p -> A_c ] + tt, st_ptr [ p -> A_c ] + tt - ( len - st_len [ p -> A_c ] ) ) ;
diff -r -w aa/Astems.c bb/Astems.c
37c37
<   int try1, newtry ;
---
>   int try, newtry ;
50c50
<   try1 = WILD ;
---
>   try = WILD ;
65,66c65,68
<     if ( try1 == WILD || try1 == newtry ) {
<       try1 = newtry ;
---
>     if ( try == WILD || try == newtry ) try = newtry ;
> 
>     else {
>       try = MAXSHORT ;
68,69d69
<     } else {
<       try1 = MAXSHORT ;
75,77c75
<   if ( try1 == WILD ) {
<     try1 = MAXSHORT ;
<   }
---
>   if ( try == WILD ) try = MAXSHORT ;
86,87c84,86
<   st_work [ q ] [ i ] = try1 ;
<   return ( try1 ) ;
---
>   st_work [ q ] [ i ] = try ;
> 
>   return ( try ) ;
111,112c110
<         ) {
<       if ( p -> A_b > 1 && p -> A_b % Aw -> A_nT != tape ) {
---
>         ) if ( p -> A_b > 1 && p -> A_b % Aw -> A_nT != tape ) {
118d115
<     }
150,151c147
<       ) {
<     for ( i = 0 ;
---
>       ) for ( i = 0 ;
153,156c149
<           i ++ ) {
<       ;
<     }
<   }
---
>                 i ++ ) ;
diff -r -w aa/Asubs.c bb/Asubs.c
71c71
<   vec [ ( i = 0 ) ] = START ;
---
>   vec [ i = 0 ] = START ;
101,102c101
<           i ++ ) {
<       if ( pnlam [ j ] != A -> A_p [ j + 1 ] ) {
---
>           i ++ ) if ( pnlam [ j ] != A -> A_p [ j + 1 ] ) {
105d103
<     }
151,152c149
<                 gap /= 2 ) {
<             for ( i = gap ;
---
>                 gap /= 2 ) for ( i = gap ;
154,155c151
<                   i ++ ) {
<               for ( j = i - gap ;
---
>                                    i ++ ) for ( j = i - gap ;
162,163d157
<             }
<           }
165,166c159
<         } else {
<           for ( i = 0 ;
---
>         } else for ( i = 0 ;
168,172c161,162
<                 ++ i ) {
<             if ( set [ i ] != UNMARK ) {
<               set [ ( vec [ n ++ ] = i ) ] = UNMARK ;
<             }
<           }
---
>                        ++ i ) if ( set [ i ] != UNMARK ) {
>               set [ vec [ n ++ ] = i ] = UNMARK ;
diff -r -w aa/Atrim.c bb/Atrim.c
14c14
<   t_low [ state ] = ( dfn = t_cnt ++ ) ;
---
>   t_low [ state ] = dfn = t_cnt ++ ;
29,30c29
<   if ( t_low [ state ] == dfn ) {
<     for ( next = MAXSHORT ;
---
>   if ( t_low [ state ] == dfn ) for ( next = MAXSHORT ;
35d33
<   }
70c68
<   t_stk = ( stk_rem = s_alloc ( A -> A_nQ ) ) ;
---
>   t_stk = stk_rem = s_alloc ( A -> A_nQ ) ;
91c89
<   for ( p = ( pz = A -> A_t + A -> A_nrows ) ;
---
>   for ( p = pz = A -> A_t + A -> A_nrows ;
93,94c91
<       ) {
<     if ( t_low [ p -> A_a ] >= DELETED || t_low [ p -> A_c ] >= DELETED ) {
---
>       ) if ( t_low [ p -> A_a ] >= DELETED || t_low [ p -> A_c ] >= DELETED ) {
101d97
<   }
112c108
<   for ( p = ( pz = A -> A_t + A -> A_nrows ) ;
---
>   for ( p = pz = A -> A_t + A -> A_nrows ;
114,115c110
<       ) {
<     if ( p -> A_b == 0 ) {
---
>       ) if ( p -> A_b == 0 ) {
118d112
<   }
125,126c119
<         ) {
<       if ( ( p - 1 ) -> A_b == p -> A_b && ( p - 1 ) -> A_a == p -> A_a ) {
---
>         ) if ( ( p - 1 ) -> A_b == p -> A_b && ( p - 1 ) -> A_a == p -> A_a ) {
129d121
<     }
diff -r -w aa/Colon.c bb/Colon.c
52,53c52
<           i ++ ) {
<       if ( Alist [ i ] -> A_nrows > 0 ) {
---
>           i ++ ) if ( Alist [ i ] -> A_nrows > 0 ) {
56d54
<     }
64,65c62
<           i ++ ) {
<       if ( Alist [ i ] -> A_nrows > 0 ) {
---
>           i ++ ) if ( Alist [ i ] -> A_nrows > 0 ) {
68d64
<     }
73,74c69
<   } else if ( ! strcmp ( "help", op ) ) {
<     fprintf ( fpout, "\n\
---
>   } else if ( ! strcmp ( "help", op ) ) fprintf ( fpout, "\n\
86c81
<   } else if ( ! strcmp ( "done", op ) || ! strcmp ( "quit", op ) || ! strcmp ( "stop", op ) || ! strcmp ( "bye", op ) ) {
---
>   else if ( ! strcmp ( "done", op ) || ! strcmp ( "quit", op ) || ! strcmp ( "stop", op ) || ! strcmp ( "bye", op ) ) {
375,376c370
<     if ( ! strcmp ( "ops", arg ) ) {
<       fprintf ( fpout, "\n\
---
>     if ( ! strcmp ( "ops", arg ) ) fprintf ( fpout, "\n\
398,399c392
<     } else if ( ! strcmp ( "colonops", arg ) ) {
<       fprintf ( fpout, "\n\
---
>     else if ( ! strcmp ( "colonops", arg ) ) fprintf ( fpout, "\n\
419,420c412
<     } else if ( ! strcmp ( "ioops", arg ) ) {
<       fprintf ( fpout, "\n\
---
>     else if ( ! strcmp ( "ioops", arg ) ) fprintf ( fpout, "\n\
433,434c425
<     } else if ( ! strcmp ( "stats", arg ) ) {
<       fprintf ( fpout, "\n\
---
>     else if ( ! strcmp ( "stats", arg ) ) fprintf ( fpout, "\n\
456,457c447
<     } else if ( ! strcmp ( "w", arg ) ) {
<       fprintf ( fpout, "\n\
---
>     else if ( ! strcmp ( "w", arg ) ) fprintf ( fpout, "\n\
471,472c461
<     } else if ( ! strcmp ( "c", arg ) ) {
<       fprintf ( fpout, "\n\
---
>     else if ( ! strcmp ( "c", arg ) ) fprintf ( fpout, "\n\
500c489
<     } else {
---
>     else {
diff -r -w aa/Lex.c bb/Lex.c
464,465c464
<         ti ++ ) {
<     if ( ( isascii ( ti ) && isprint ( ti ) ) || ti == '\t' || ti == '\n' ) {
---
>         ti ++ ) if ( ( isascii ( ti ) && isprint ( ti ) ) || ti == '\t' || ti == '\n' ) {
469d467
<   }
479c477,481
<   PROMT ( void ) yyparse ( ) ;
---
> 
>   PROMT if ( yyparse ( ) != 0 ) {
>     Error ( "yyparse returned unexpectedly" ) ;
>   }
> 
diff -r -w aa/Makefile bb/Makefile
13c13
< 	gcc -Wall -O -c $*.c
---
> 	gcc -Wall -O0 -g -c $*.c
16,19c16
< 	gcc -Wall -O $(OFILES) -o ginr
< 
< format:	$(CFILES)
< 	astyle --style=1tbs $(CFILES)
---
> 	gcc -Wall -O0 -g $(OFILES) -o ginr
28c25
< 	cp -p ginr ~/bin/ninr
---
> 	cp -p ginr ~/bin/ginr
41c38
< 	rm -f $(OFILES) y.tab.h y.tab.c
---
> 	rm -f $(OFILES) y.tab.h y.tab.c *.orig
diff -r -w aa/O.h bb/O.h
7,9c7,8
< typedef unsigned int SHORT ;
< #define MAXSHORT        017777777777
< #define MAXSTATE        017777777777
---
> typedef unsigned short SHORT ;
> #define MAXSHORT        0177777
diff -r -w aa/Parse.y bb/Parse.y
4d3
< #include <string.h>
5a5
> #include <string.h>
6a7,9
>   int yylex ( ) ;
>   int yyparse ( void ) ;
>   void yyerror ( char * ) ;
13a17,20
>   extern int do_n_i ( ) ;
>   extern A_OBJECT do_an_a ( ) ;
>   extern A_OBJECT do_ann_a ( ) ;
>   extern A_OBJECT do_nn_a ( ) ;
147c154
<     return 1 ;
---
>     return ( 0 ) ;
398a406
>   }
401d408
<   }
diff -r -w aa/R.c bb/R.c
35c35
<   p = R -> R_hash + ( ( ( ( 16807 * reca + recb ) & 017777777777 ) * 16807 ) & 017777777777 ) % R -> R_lhash ;
---
>   p = R -> R_hash + ( ( ( ( 16807 * ( unsigned ) reca + recb ) & 017777777777 ) * 16807 ) & 017777777777 ) % R -> R_lhash ;
diff -r -w aa/S.c bb/S.c
5c5
< void Error ( ) ;
---
> #include "O.h"
27c27
< #define S_m             26
---
> #define S_m             28
30c30
< long LINUXmem = 0 ;
---
> int LINUXmem = 0 ;
64c64
<     long mem ;
---
>     int mem ;
136c136
<   long a, b ;
---
>   int a, b ;
149,151c149
<           ++ k ) {
<       ;
<     }
---
>           ++ k ) ;
175,177c173
<           ++ j ) {
<       ;
<     }
---
>           ++ j ) ;
266,267c262
<   int i, cnt ;
<   long grand, gran2, size ;
---
>   int grand, gran2, i, size, cnt ;
283,284c278
<       if ( p != q ) {
<         for ( cnt = 1 ;
---
>       if ( p != q ) for ( cnt = 1 ;
286,290c280
<               ++ cnt ) {
<           ;
<         }
< 
<         ;
---
>                             ++ cnt ) ;
292c282
<       } else {
---
>       else {
297c287
<         fprintf ( fpout, "%4ld ", size ) ;
---
>         fprintf ( fpout, "%4d ", size ) ;
300c290
<         fprintf ( fpout, "%4ldK", size / 1024 ) ;
---
>         fprintf ( fpout, "%4dK", size / 1024 ) ;
303c293
<         fprintf ( fpout, "%4ldM", size / 1024 / 1024 ) ;
---
>         fprintf ( fpout, "%4dM", size / 1024 / 1024 ) ;
307c297
<       fprintf ( fpout, "%5ldM", ( cnt * size + 1023 ) / 1024 / 1024 ) ;
---
>       fprintf ( fpout, "%5dM", ( cnt * size + 1023 ) / 1024 / 1024 ) ;
309c299
<       fprintf ( fpout, "%5ldM\n", ( S_alld_cnt [ i ] * size + 1023 ) / 1024 / 1024 ) ;
---
>       fprintf ( fpout, "%5dM\n", ( S_alld_cnt [ i ] * size + 1023 ) / 1024 / 1024 ) ;
315,316c305,306
<   fprintf ( fpout, "            %5ldM", ( grand + 1023 ) / 1024 / 1024 ) ;
<   fprintf ( fpout, "       %5ldM\n", ( gran2 + 1023 ) / 1024 / 1024 ) ;
---
>   fprintf ( fpout, "            %5dM", ( grand + 1023 ) / 1024 / 1024 ) ;
>   fprintf ( fpout, "       %5dM\n", ( gran2 + 1023 ) / 1024 / 1024 ) ;
318c308
<   fprintf ( fpout, "Memory Size %5ldM\n", size / 1024 / 1024 ) ;
---
>   fprintf ( fpout, "Memory Size %5dM\n", size / 1024 / 1024 ) ;
321,322c311
<     fprintf ( fpout, "Excess %ld bytes\n", size % 1024 ) ;
<   }
---
>     fprintf ( fpout, "Excess %d bytes\n", size % 1024 ) ;
324,371d312
< S_ft * S_find ( char * p )
< {
<   if ( p < ( char * ) S_lo || p >= ( char * ) S_hi ) {
<     Error ( "S_find: BOTCH 1" ) ;
<   }
< 
<   S_ft * l = S_lo ;
<   long incr = ( p - ( char * ) S_lo ) / sizeof ( S_ft ) ;
<   long offset = ( p - ( char * ) S_lo ) % sizeof ( S_ft ) ;
< 
<   if ( ( char * ) & l [ incr ] + offset != p ) {
<     Error ( "S_find: BOTCH 2" ) ;
<   }
< 
<   if ( offset < 0 || offset >= sizeof ( S_ft ) ) {
<     Error ( "S_find: BOTCH 3" ) ;
<   }
< 
<   long base = 0 ;
<   int base_k = kval ( & l [ base ] ) ;
<   long right = S_hi - S_lo ;
<   int k ;
< 
<   for ( k = 0 ;
<         ( incr >> k ) ;
<         ++ k ) {
<     ;
<   }
< 
<   -- k ;
<   right = ( 1 << k ) ;
< 
<   while ( base_k <= k ) {
<     base += right ;
<     incr -= right ;
<     base_k = kval ( & l [ base ] ) ;
< 
<     for ( k = 0 ;
<           ( incr >> k ) ;
<           ++ k ) {
<       ;
<     }
< 
<     -- k ;
<     right = ( 1 << k ) ;
<   }
< 
<   return ( & l [ base ] ) ;
387,389c328
<         ++ k ) {
<     ;
<   }
---
>         ++ k ) ;
426,428c365
<         ++ k ) {
<     ;
<   }
---
>         ++ k ) ;
449,452d385
< char * Sfind ( char * p )
< {
<   return ( ( ( char * ) S_find ( p ) ) + 4 ) ;
< }
483c416
<         printf ( "Audit anomaly in busy block at %lx:\n", U ( p ) ) ;
---
>         printf ( "Audit anomoly in busy block at %lx:\n", U ( p ) ) ;
502c435
<         printf ( "Audit anomaly in free block at %lx:\n", U ( p ) ) ;
---
>         printf ( "Audit anomoly in free block at %lx:\n", U ( p ) ) ;
diff -r -w aa/stamp.c bb/stamp.c
1,2c1,2
< char Version [ ] = "2.0.4a" ;
< char Date [ ] = "August 15, 2018" ;
---
> char Version [ ] = "2.0.3g" ;
> char Date [ ] = "Jan 15 2022" ;
diff -r -w aa/U.c bb/U.c
35c35
<   p = U -> U_hash + ( ( ( ( 16807 * ( ( 16807 * reca + recb ) & 017777777777 ) + recc ) & 017777777777 ) * 16807 ) & 017777777777 ) % U -> U_lhash ;
---
>   p = U -> U_hash + ( ( ( ( 16807 * ( ( 16807 * ( unsigned ) reca + recb ) & 017777777777 ) + recc ) & 017777777777 ) * 16807 ) & 017777777777 ) % U -> U_lhash ;
diff -r -w aa/V.c bb/V.c
25,26c25
<   while ( *++ p == *++ q ) {
<     if ( * p == MAXSHORT ) {
---
>   while ( *++ p == *++ q ) if ( * p == MAXSHORT ) {
29d27
<   }
Only in aa: VERSION
